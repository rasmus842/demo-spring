openapi: 3.0.3
info:
  title: Account Management API
  description: API for managing Account entities
  version: 1.0.0
externalDocs:
  url: https://swagger.io/specification/
  description: Find more information about OAS3.0 standard.

paths:
  /accounts:
    post:
      summary: Create a new account
      description: Creates a new Account object an saves it to database
      operationId: createAccount
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '201':
          description: Account created
          content:
            application/json:
              schema:
                type: integer
                format: int64
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /accounts/{id}:
    get:
      summary: Get account by ID
      description: Gets account by ID, if it exists
      operationId: getAccountById
      tags:
        - account
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    put:
      summary: Update an existing account
      description: Updates account with given ID, if it exists
      operationId: updateAccount
      tags:
        - account
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
      responses:
        '204':
          description: Account updated
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
    delete:
      summary: Delete an account
      description: Deletes account with given ID, if it exists
      operationId: deleteAccount
      tags:
        - account
      parameters:
        - $ref: '#/components/parameters/AccountIdParam'
      responses:
        '204':
          description: Account deleted
        '404':
          description: Account not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'

components:
  parameters:
    AccountIdParam:
      description: Account ID
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64

  schemas:
    AccountRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "John Doe"
        phoneNr:
          type: string
          example: "+1234567890"
          nullable: true

    AccountDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        phoneNr:
          type: string
          example: "+1234567890"
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ErrorMessage:
      type: object
      properties:
        title:
          type: string
          description: A short summary about the error type.
          example: "Service Unavailable"
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem.
          example: "Connection to database timed out"
